BACSAL Project
Try executing this chunk by clicking the *Run* button within the chunk
``` r
``` r
``` r
``` r
``` r
plot(iris)
``` r
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
plot(iris3)
plot(iris3)
plot(iris)
plot(iris), echo = T
plot(iris)
library(readr)
Compiled_master_repaired <- read_csv("Compiled_master_repaired.csv")
View(Compiled_master_repaired)
library(readr)
Compiled_master_repaired <- read_csv("Compiled_master_repaired.csv")
View(Compiled_master_repaired)
library(readr)
Compiled_master_repaired <- read_csv("Compiled_master_repaired.csv", show_col_types = F)
View(Compiled_master_repaired)
library(readr)
Compiled_master_repaired <- read_csv("Compiled_master_repaired.csv", show_col_types = F)
str(Compiled_master_repaired)
library(readr)
Compiled_master_repaired <- read_csv("Compiled_master_repaired.csv", show_col_types = F)
head(Compiled_master_repaired)
library(readr)
bsdata <- read_csv("complete_BACSAL_data.csv", show_col_types = F)
head(Compiled_master_repaired)
View(Compiled_master_repaired)
View(Compiled_master_repaired)
View(Compiled_master_repaired)
View(Compiled_master_repaired)
library(ggplot2)
library(magrittr)
library(readr)
bsdata <- read_csv("complete_BACSAL_data.csv", show_col_types = F)
View(Compiled_master_repaired)
library(ggplot2)
library(magrittr)
library(tidyverse)
bsdata %>%
select(`Root Mass (g)`, `Shoot mass (g)`) %>%
mutate(rts = `Root Mass (g)` / `Shoot mass (g)`)
bsdata %>%
select(`Root Mass (g)`, `Shoot mass (g)`) %>%
mutate(rts = `Root Mass (g)` / `Shoot mass (g)`)
bsdata %>%
select(`Root Mass (g)`, `Shoot mass (g)`) %>%
mutate(rts = `Root Mass (g)` / `Shoot mass (g)`)
bsdata %>%
select(`Root Mass (g)`, `Shoot mass (g)`) %>%
mutate(rts = `Root Mass (g)` / `Shoot mass (g)`)
bsdata %>%
select(`Root Mass (g)`, `Shoot mass (g)`) %>%
mutate(rts = `Root Mass (g)` / `Shoot mass (g)`)
bsdata %>%
select(`Root Mass (g)`, `Shoot mass (g)`) %>%
mutate(rts = `Root Mass (g)` / `Shoot mass (g)`)
bsdata %>%
select(`Root Mass (g)`, `Shoot mass (g)`) %>%
mutate(rts = `Root Mass (g)` / `Shoot mass (g)`)
View(Compiled_master_repaired)
rm(Compiled_master_repaired)
library(readr)
bsdata <- read_csv("complete_BACSAL_data.csv", show_col_types = F)
view(bsdata)
library(readr)
library(ggplot2)
library(magrittr)
library(tidyverse)
library(ggsci)
library(factoextra)
library(lme4)
library(lmerTest)
library(htmltools)
library(devtools)
library(caret)
#library(sciplot)
#library(Plasticity)
bsdata <- read_csv("complete_BACSAL_data.csv", show_col_types = F)
view(bsdata)
bsdata <- bsdata %>%
rename(L01 = "0<.L.<=0.5000000",
L02 = "0.5000000<.L.<=1.0000000",
L03 = "1.0000000<.L.<=1.5000000",
L04 = "1.5000000<.L.<=2.0000000",
L05 = "2.0000000<.L.<=2.5000000",
L06 = "2.5000000<.L.<=3.0000000",
L07 = "3.0000000<.L.<=3.5000000",
L08 = "3.5000000<.L.<=4.0000000",
L09 = "4.0000000<.L.<=4.5000000",
L10 = ".L.>4.5000000")
#Add in all created traits, remove all missing values
bsdata_complete <- bsdata %>%
mutate(rts = RootMassg / ShootMassg) %>% #Root-to-Shoot
mutate(srl = (Lengthcm/100) / RootMassg) %>% #SRL
mutate(sra = SurfAreacm2 / RootMassg) %>% #SRA
mutate(rtd = ((RootMassg*1000)/(RootVolcm3*1000))) %>% #RTD
mutate(kwrgr = ((log(fHeight)) - (log(iHeight)))/35) #RGR
head(bsdata_complete)
#plotting rts against site aridity, separated by Nitrogen
bsdata %>%
select(Code, Origin, AIKoppen, Treatment, Water, Nitrogen, RootMassg, ShootMassg) %>%
mutate(rts = RootMassg / ShootMassg ) %>%
ggplot() +
aes(x = AIKoppen, y = rts, outline = Origin, fill = Nitrogen) +
geom_boxplot(na.rm = T ) + #removes missing values
ggtitle("Root-shoot ratio, grouped by Nitrogen") +
labs(y = "Root-to-Shoot Ratio", x = "Koppen Aridity Index") +
scale_fill_discrete(labels = c("High N", "Low N"))
##Trying to subset each Origin to perform Welch T Test
#BOYD
boyd_rts <- bsdata %>%
mutate(rts = RootMassg / ShootMassg) %>%
subset(Origin == "BOYD")
t.test(data = boyd_rts, rts ~ Nitrogen, paired = F)
#BOYD: p<0.05, p-value = 2.531e-06, ***
#ELFR
elfr_rts <- bsdata %>%
mutate(rts = RootMassg / ShootMassg) %>%
subset(Origin == "ELFR")
t.test(data = elfr_rts, rts ~ Nitrogen, paired = F)
#ELFR: p<0.05, p-value = 5.808e-07, ***
#COAL
coal_rts <- bsdata %>%
mutate(rts = RootMassg / ShootMassg) %>%
subset(Origin == "COAL")
t.test(data = coal_rts, rts ~ Nitrogen, paired = F)
#COAL: p<0.05, p-value = 0.002649, ***
#All ORIGIN groups are significantly different between their high and low N groups
#Distribution Check
bsdata_complete %>%
ggplot() +
aes(rts) +
geom_histogram(na.rm = T,
aes(y = after_stat(density)), fill = "orange",
bins = 10) +
geom_density(na.rm = T)
#Using lmer package
mod_rts <- lmer(rts ~ AIKoppen + Water*Nitrogen + (1 | Sex) + (1 | Origin) + (1 | Parent:Origin), data = bsdata_complete)
#Using lmer package
mod_rts <- lmer(rts ~ Water*Nitrogen + (1 | Sex) + (1 | Origin) + (1 | Parent:Origin), data = bsdata_complete)
#Using lmer package
mod_rts <- lmer(rts ~ Water*Nitrogen + (1 | Sex) + Origin + (1 | Parent:Origin), data = bsdata_complete)
summary(mod_rts)
#Using lmer package
mod_rts <- lmer(rts ~ Water*Nitrogen  + Origin + (1 | Parent:Origin), data = bsdata_complete)
#Using lmer package
mod_rts <- lmer(rts ~ Water*Nitrogen + Sex + Origin + (1 | Parent:Origin), data = bsdata_complete)
#Using lmer package
mod_rts <- lmer(rts ~ AIKoppen + Water*Nitrogen + (1 | Origin) + (1 | Parent:Origin), data = bsdata_complete)
summary(mod_rts)
#Using lmer package
mod_rts <- lmer(rts ~ AIKoppen + Water*Nitrogen + Origin + (1 | Parent:Origin), data = bsdata_complete)
#Using lmer package
mod_rts <- lmer(rts ~ Water*Nitrogen + Origin + (1 | Parent:Origin), data = bsdata_complete)
summary(mod_rts)
#Using lmer package
mod_rts <- lmer(rts ~ Sex + Water*Nitrogen + (1 | Origin) + (1 | Parent:Origin), data = bsdata_complete)
#Using lmer package
mod_rts <- lmer(rts ~ Sex, data = bsdata_complete)
#Using lmer package
mod_rts <- lmer(rts ~ Sex + (1 | Origin), data = bsdata_complete)
summary(mod_rts)
#Using lmer package
mod_rts <- lmer(rts ~ Sex + Water*Nitrogen + (1 | Origin) + (1 | Parent:Origin), data = bsdata_complete)
#Using lmer package
mod_rts <- lmer(rts ~ (1 |Sex) + Water*Nitrogen + (1 | Origin) + (1 | Parent:Origin), data = bsdata_complete)
#Using lmer package
mod_rts <- lmer(rts ~ Water*Nitrogen + (1 | Origin) + (1 | Parent:Origin), data = bsdata_complete)
summary(mod_rts)
#Using lmer package
mod_rts <- lmer(rts ~ Water*Nitrogen + Origin + (1 | Parent:Origin), data = bsdata_complete)
summary(mod_rts)
#Using lmer package
mod_rts <- lmer(rts ~ Water*Nitrogen + Origin + (1 | Sex) + (1 | Parent:Origin), data = bsdata_complete)
#Using lmer package
mod_rts <- lmer(rts ~ Water*Nitrogen + AIKoppen + (1 | Origin) + (1 | Parent:Origin), data = bsdata_complete)
summary(mod_rts)
#Using lmer package
mod_rts <- lmer(rts ~ Water*Nitrogen + AIKoppen + Origin + (1 | Parent:Origin), data = bsdata_complete)
#Using lmer package
mod_rts <- lmer(rts ~ Water*Nitrogen + AIKoppen + (1 | Origin) + (1 | Parent:Origin), data = bsdata_complete)
summary(mod_rts)
mod_aov <-anova(mod_rts)
step_result <- step(mod_rts)
final_model <- get_model(step_result)
final_model
#Using lmer package
mod_rts <- lmer(rts ~ Water*Nitrogen + AIKoppen + (1 | Origin) + (1 | Parent:Origin), data = bsdata_complete)
summary(mod_rts)
bsdata %>%
select(Origin, RootMassg, ShootMassg) %>%
mutate(rts = RootMassg / ShootMassg) %>%
ggplot() +
aes(x = factor(Origin, level = c('BOYD', 'ELFR', 'COAL')),
y = rts, fill = Origin) +
geom_boxplot(na.rm = T) + #removes missing values
ggtitle("Root-shoot ratio, grouped by Origin") +
labs(y = "Root-to-Shoot Ratio",
x = "Origin, Driest > Wettest")
#Create temp df for stats tests
origin_rts <- bsdata %>%
mutate(rts = RootMassg / ShootMassg)
#One-Way ANOVA to determine statistical significance + Tukey multiple pairwise-comparison
rts.aov <- aov(rts ~ Origin, data = origin_rts)
summary(rts.aov)
TukeyHSD(rts.aov)
#Note: From Tukey test, ELFR & COAL are NOT statistically significant from each other
#plotting rts against site aridity, separated by Nitrogen
bsdata_complete %>%
ggplot() +
aes(x = AIKoppen, y = rts, outline = Origin, fill = Nitrogen) +
geom_boxplot(na.rm = T ) + #removes missing values
ggtitle("Root-shoot ratio, grouped by Nitrogen") +
labs(y = "Root-to-Shoot Ratio", x = "Koppen Aridity Index") +
scale_fill_discrete(labels = c("High N", "Low N"))
bsdata_complete %>%
ggplot() +
aes(x = AIKoppen, y = rts, fill = Origin) +
geom_boxplot(na.rm = T) + #removes missing values
ggtitle("Root-shoot ratio") +
labs(y = "Root-to-Shoot Ratio",
x = "Koppen Aridity Index") +
scale_fill_discrete(labels = c("High N", "Low N"))
bsdata_complete %>%
ggplot() +
aes(x = AIKoppen, y = rts, fill = Origin) +
geom_boxplot(na.rm = T) + #removes missing values
ggtitle("Root-shoot ratio") +
labs(y = "Root-to-Shoot Ratio",
x = "Koppen Aridity Index") +
scale_fill_discrete(labels = c("BOYD", "ELFR", "COAL"))
str(bsdata_complete)
bsdata_complete %>%
mutate(froots = (L01 + L02 + L03 + L04))
mutate(froots = (colSums (L01:L04))
bsdata_complete %>%
bsdata_complete %>%
mutate(froots = sum(L01, L02, L03, L04))
bsdata_complete %>%
mutate(froots = sum(L01, L02, L03, L04))
bsdata_complete %>%
mutate(froots = (L01 + L02 + L03 + L04))
bsdata_complete %>%
mutate(froots = (L01 + L02 + L03 + L04)) %>%
mutate(croots = (L05 + L06 + L07 + L08 + L09 + L10))
bsdata_complete %>%
mutate(froots = (L01 + L02 + L03 + L04)) %>%
mutate(croots = (L05 + L06 + L07 + L08 + L09 + L10)) %>%
mutate(froots/croots)
bsdata_complete %>%
mutate(froots = (L01 + L02 + L03 + L04)) %>%
mutate(croots = (L05 + L06 + L07 + L08 + L09 + L10)) %>%
mutate(fcr = froots/croots) +
ggplot() +
aes(x = AIKoppen, y = log(fcr), fill = Origin) +
geom_boxplot(na.rm = T) + #removes missing values
```
bsdata_complete %>%
mutate(froots = (L01 + L02 + L03 + L04)) %>%
mutate(croots = (L05 + L06 + L07 + L08 + L09 + L10)) %>%
mutate(fcr = froots/croots) +
ggplot() +
aes(x = AIKoppen, y = log(fcr)) +
geom_boxplot(na.rm = T) + #removes missing values
```
bsdata_complete %>%
mutate(froots = (L01 + L02 + L03 + L04)) %>%
mutate(croots = (L05 + L06 + L07 + L08 + L09 + L10)) %>%
mutate(fcr = froots/croots)  %>%
ggplot() +
aes(x = AIKoppen, y = log(fcr)) +
geom_boxplot(na.rm = T) + #removes missing values
```
bsdata_complete %>%
mutate(froots = (L01 + L02 + L03 + L04)) %>%
mutate(croots = (L05 + L06 + L07 + L08 + L09 + L10)) %>%
mutate(fcr = froots/croots)  %>%
ggplot() +
aes(x = AIKoppen, y = log(fcr))
bsdata_complete %>%
mutate(froots = (L01 + L02 + L03 + L04)) %>%
mutate(croots = (L05 + L06 + L07 + L08 + L09 + L10)) %>%
mutate(fcr = froots/croots)
bsdata_complete %>%
mutate(froots = (L01 + L02 + L03 + L04)) %>%
mutate(croots = (L05 + L06 + L07 + L08 + L09 + L10)) %>%
mutate(fcr = froots/croots) %>%
ggplot() +
aes(x = AIKoppen, y = log(fcr)) +
geom_point()
bsdata_complete %>%
mutate(froots = (L01 + L02 + L03 + L04)) %>%
mutate(croots = (L05 + L06 + L07 + L08 + L09 + L10)) %>%
mutate(fcr = froots/croots) %>%
ggplot() +
aes(x = AIKoppen, y = log(fcr)) +
geom_point(na.rm = T)
bsdata_complete %>%
mutate(froots = (L01 + L02 + L03 + L04)) %>%
mutate(croots = (L05 + L06 + L07 + L08 + L09 + L10)) %>%
mutate(fcr = froots/croots) %>%
ggplot() +
aes(x = AIKoppen, y = log(fcr)) +
geom_boxplot(na.rm = T)
bsdata_complete %>%
mutate(froots = (L01 + L02 + L03 + L04)) %>%
mutate(croots = (L05 + L06 + L07 + L08 + L09 + L10)) %>%
mutate(fcr = froots/croots) %>%
ggplot() +
aes(x = AIKoppen, y = log(fcr), fill = Origin) +
geom_boxplot(na.rm = T)
bsdata_complete %>%
mutate(froots = (L01 + L02 + L03 + L04)) %>%
mutate(croots = (L05 + L06 + L07 + L08 + L09 + L10)) %>%
mutate(fcr = froots/croots) %>%
ggplot() +
aes(x = AIKoppen, y = (fcr), fill = Origin) +
geom_boxplot(na.rm = T)
bsdata_complete %>%
mutate(froots = (L01 + L02 + L03 + L04)) %>%
mutate(croots = (L05 + L06 + L07 + L08 + L09 + L10)) %>%
mutate(fcr = froots/croots) %>%
ggplot() +
aes(x = AIKoppen, y = log(fcr + 1), fill = Origin) +
geom_boxplot(na.rm = T)
bsdata_complete %>%
mutate(froots = (L01 + L02 + L03 + L04)) %>%
mutate(croots = (L05 + L06 + L07 + L08 + L09 + L10)) %>%
mutate(fcr = froots/croots) %>%
ggplot() +
aes(x = AIKoppen, y = log(fcr), fill = Origin) +
geom_boxplot(na.rm = T)
bsdata_complete %>%
mutate(froots = (L01 + L02 + L03 + L04)) %>%
mutate(croots = (L05 + L06 + L07 + L08 + L09 + L10)) %>%
mutate(fcr = froots/croots) %>%
ggplot() +
aes(x = AIKoppen, y = log(fcr + 1), fill = Origin) +
geom_boxplot(na.rm = T)
bsdata_complete %>%
mutate(froots = (L01 + L02 + L03 + L04)) %>%
mutate(croots = (L05 + L06 + L07 + L08 + L09 + L10)) %>%
mutate(fcr = froots/croots) %>%
ggplot() +
aes(x = AIKoppen, y = log(fcr), fill = Origin) +
geom_boxplot(na.rm = T)
geom_boxplot(na.rm = T) +
mutate(fcr = froots/croots) %>%
bsdata_complete %>%
mutate(froots = (L01 + L02 + L03 + L04)) %>%
mutate(croots = (L05 + L06 + L07 + L08 + L09 + L10)) %>%
mutate(fcr = froots/croots) %>%
ggplot() +
aes(x = AIKoppen, y = log(fcr), fill = Origin) +
geom_boxplot(na.rm = T) +
ggtitle("Fine-Coarse Root Ratio") +
labs(y = "Fine-Coarse Root Ratio (f<=2mm<c)",
x = "Koppen Aridity Index")
bsdata_complete %>%
mutate(froots = (L01 + L02 + L03 + L04)) %>%
mutate(croots = (L05 + L06 + L07 + L08 + L09 + L10)) %>%
mutate(fcr = froots/croots) %>%
ggplot() +
aes(x = AIKoppen, y = log(fcr), fill = Origin) +
geom_boxplot(na.rm = T) +
ggtitle("Fine-Coarse Root Ratio") +
labs(y = "Fine-Coarse Root Ratio (f<=2mm<c)",
x = "Koppen Aridity Index"))
bsdata_complete %>%
mutate(froots = (L01 + L02 + L03 + L04)) %>%
mutate(croots = (L05 + L06 + L07 + L08 + L09 + L10)) %>%
mutate(fcr = froots/croots) %>%
ggplot() +
aes(x = AIKoppen, y = log(fcr), fill = Origin) +
geom_boxplot(na.rm = T) +
ggtitle("Fine-Coarse Root Ratio") +
labs(y = "Fine-Coarse Root Ratio (f<=2mm<c)",
x = "Koppen Aridity Index")
#Specific Root Area by AIKoppen
bsdata_complete %>%
ggplot() +
aes(x = AIKoppen, y = sra, fill = Origin) +
geom_boxplot(na.rm = T) +
scale_y_continuous(limits = c(0,1500)) +
labs(y = "Specific Root Area (SRA) ",
x = "Koppen Aridity Index")
#Specific Root Area vs KW RGR
bsdata_complete %>%
ggplot() +
aes(x = sra, y = kwrgr, color = Origin) +
geom_point(na.rm = T) +
scale_x_continuous(limits = c(0,1500)) +
stat_ellipse(na.rm = T,
lwd = 1.2) +
labs(y = "Relative Growth Rate",
x = "Specific Root Area (SRA)")
#RGR vs. root diameter
bsdata_complete %>%
ggplot() +
aes(x = AvgDiammm, y = kwrgr, color = Origin) +
geom_jitter(na.rm = T) +
scale_x_continuous(limits = c(0, 1.3)) +
stat_ellipse(na.rm = T,
lwd = 1.2) +
labs(y = "Relative Growth Rate",
x = "Root Average Diameter (mm)")
#KWRGR vs. Specific Root Length
bsdata_complete %>%
ggplot() +
aes(x = srl, y = kwrgr, color = Origin) +
geom_point(na.rm = T) +
scale_x_continuous(limits = c(0,100)) +
stat_ellipse(na.rm = T,
lwd = 1.2) +
labs(y = "Relative Growth Rate",
x = "Specific Root Length (m/g)")
#KWrgr vs. RTD
bsdata_complete %>%
ggplot() +
aes(x = rtd, y = kwrgr, color = Origin) +
geom_point(na.rm = T) +
stat_ellipse(na.rm = T,
lwd = 1.2) +
labs(y = "Relative Growth Rate",
x = "Root Tissue Density (mg/mm^3)")
bsdata_complete %>%
ggplot() +
aes(x = rts, y = kwrgr, color = Origin) +
geom_point(na.rm = T) +
stat_ellipse(na.rm = T,
lwd = 1.2) +
labs(y = "Relative Growth Rate",
x = "Root-to-Shoot Ratio")
bsdatacat <- bsdata %>%
pivot_longer(L01:L10, names_to = 'Lcategory', values_to = 'LengthCat');
#Non-normalized
bsdatacat %>%
ggplot() +
aes(x = Lcategory, y = log(LengthCat+1), fill = Origin) +
geom_boxplot(na.rm = T) +##is this counting zeroes?
labs(y = "Root Length (log transformed)",
x = "Root Diameter Class")
```{r PCA, echo = T, results='show'}
Origin <- bsdata_complete$Origin
Origin <- bsdata_complete$Origin
#Select relevant root variables
Root_data <- bsdata_complete %>%
select(Lengthcm, RootMassg, RootVolcm3, SurfAreacm2, ShootMassg,
AvgDiammm, rts, srl, sra, kwrgr, rtd, AIKoppen)
cor(Root_data, use = 'complete.obs') #checking each trait's correlation
Root_PCA <- prcomp(na.omit(Root_data), scale = T)
fviz_eig(Root_PCA)
fviz_pca_biplot(Root_PCA,
repel = T, #Avoid text overlapping
col.ind = "black", # Individuals
alpha.ind = 0, #turns individuals invisible
addEllipses = T,
col.var = "#2E9FDF" # Variables color
)
bsdata_complete %>%
ggplot() +
aes(x = AIKoppen, y = rts, fill = Origin) +
geom_boxplot(na.rm = T) + #removes missing values
ggtitle("Root-shoot ratio") +
labs(y = "Root-to-Shoot Ratio",
x = "Koppen Aridity Index") +
scale_fill_discrete(labels = c("BOYD", "ELFR", "COAL"))
bsdata_complete %>%
ggplot() +
aes(x = AIKoppen, y = rts, fill = Origin) +
geom_boxplot(na.rm = T) + #removes missing values
ggtitle("Root-shoot ratio") +
labs(y = "Root-to-Shoot Ratio",
x = "Koppen Aridity Index") +
scale_fill_discrete(labels = c("BOYD", "ELFR", "COAL"))
#Create temp df for stats tests
origin_rts <- bsdata_complete$rts
#One-Way ANOVA to determine statistical significance + Tukey multiple pairwise-comparison
rts.aov <- aov(rts ~ Origin, data = origin_rts)
